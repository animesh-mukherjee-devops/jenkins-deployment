controller:
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: lts-jdk17
    pullPolicy: IfNotPresent

  admin:
    username: admin
    password: ""   # if empty, Helm auto-generates

  persistence:
    enabled: true
    storageClass: ""   # empty = use AKS default (managed-csi)
    size: 20Gi

 
  
  service:
    type: LoadBalancer
    port: 8080
    targetPort: 8080

  resources:
    requests:
      cpu: "500m"
      memory: "1.5Gi"
    limits:
      cpu: "2"
      memory: "4Gi"
  
  startupProbe:
    httpGet:
      path: "/login"
      port: http
    initialDelaySeconds: 60
    periodSeconds: 10
    failureThreshold: 30  # (30 x 10s = 5 minutes max wait)

  readinessProbe:
    httpGet:
      path: "/login"
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 10

  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
      kubernetes-cloud.yaml: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                namespace: "jenkins"
                serverUrl: "https://kubernetes.default.svc"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                containerCapStr: "50"
                templates:
                  - name: "default"
                    label: "k8s"
                    yaml: |
                      apiVersion: v1
                      kind: Pod
                      spec:
                        restartPolicy: Never
                        containers:
                          - name: jnlp
                            image: jenkins/inbound-agent:latest-jdk17
                            resources:
                              requests: { cpu: "200m", memory: "512Mi" }
                              limits:   { cpu: "2",    memory: "2Gi" }

  
agent:
  enabled: true

rbac:
  create: true
