controller:
  image: jenkins/jenkins:lts-jdk17
  tag: lts
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - configuration-as-code
    - credentials-binding
    - git
  resources:
    requests:
      cpu: "500m"
      memory: "1.5Gi"
    limits:
      cpu: "2"
      memory: "4Gi"

  # Persist Jenkins home
  persistence:
    enabled: true
    storageClass: "local-path"   # <- important
    size: 20Gi                   # adjust as needed  

  # Run controller on a specific node (optional but common)
  nodeSelector:
    jenkins: controller
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: jenkins
                operator: In
                values: ["controller"]

  # Expose the UI
  serviceType: ClusterIP
  ingress:
    enabled: false          # set to false if you prefer LoadBalancer/NodePort
    hostName: jenkins.example.com   # <-- change this
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt
    tls:
      - secretName: jenkins-tls
        hosts:
          - jenkins.example.com

  # Secure defaults
  adminUser: admin
  adminPassword: ""         # Helm will auto-generate if empty
  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
      kubernetes-cloud.yaml: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                namespace: "jenkins"
                serverUrl: "https://kubernetes.default.svc"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                containerCapStr: "50"
                templates:
                  - name: "default"
                    label: "k8s"
                    yaml: |
                      apiVersion: v1
                      kind: Pod
                      metadata:
                        labels:
                          jenkins: agent
                      spec:
                        nodeSelector:
                          jenkins: agent
                        tolerations: []
                        containers:
                          - name: jnlp
                            image: jenkins/inbound-agent:latest-jdk17
                            # Pass through CA certs if your cluster uses custom CAs
                            env:
                              - name: JAVA_OPTS
                                value: "-Xmx512m"
                            resources:
                              requests:
                                cpu: "200m"
                                memory: "512Mi"
                              limits:
                                cpu: "2"
                                memory: "2Gi"
                        restartPolicy: Never

agent:
  enabled: true   # Creates the agent service (tcp 50000) for inbound agents

rbac:
  create: true

serviceAccount:
  create: true
  name: "" # chart will auto-name and bind

controller:
  additionalExistingSecrets: []
